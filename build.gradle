plugins {
    id 'maven-publish'
    id 'fabric-loom' version '0.8-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://bai.jfrog.io/artifactory/maven" }
}


dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "me.shedaniel:legacy-yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

//    modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
//        exclude group: "net.fabricmc.fabric-api"
//    }

    modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${wthit}"
    modRuntime "mcp.mobius.waila:wthit:fabric-${wthit}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
//    from(sourceSets.main.resources.srcDirs) {
//        include "fabric.mod.json"
//        expand "version": project.version
//    }
//
//    from(sourceSets.main.resources.srcDirs) {
//        exclude "fabric.mod.json"
//    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this task, sources will not be generated.
    withSourcesJar()
}
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = "sources"
//    from sourceSets.main.allSource
//}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
